{"version":3,"sources":["Wizard.js","Template.js","App.js","reportWebVitals.js","index.js"],"names":["Section","display","isValidSection","element","isValidElement","type","sleep","timeout","Promise","resolve","setTimeout","eventTypes","Wizard","props","isOpen","duration","children","canOverlayClick","onClose","useState","currentIndex","setCurrentIndex","event","setEvent","sections","Array","filter","getSections","transitions","useTransition","from","opacity","enter","leave","next","a","onNext","prev","last","length","onPrev","isCurrent","index","createPortal","map","item","key","div","style","className","rest","SectionAnimated","current","cns","onClick","undefined","document","getElementById","useSpring","config","delay","styles","section","interpolate","o","defaultProps","allowProgress","Button","ProgressBar","min","max","start","reverse","width","reset","w","Template","content","showBackButton","onBack","footer","App","setIsOpen","onFinish","alert","title","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a3128dd4.chunk.js","sourcesContent":["import React, {\r\n  useState,\r\n  isValidElement,\r\n  Fragment,\r\n} from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport {\r\n  useSpring,\r\n  useTransition,\r\n  animated,\r\n} from 'react-spring'\r\nimport cns from 'classnames'\r\nimport './Wizard.scss'\r\n\r\nconst SECTION_NAME = 'wizard-section'\r\n\r\nSection.display = 'wizard-section'\r\nexport function Section() { }\r\n\r\nconst isValidSection = (element) => {\r\n  return isValidElement(element) && element.type.display === SECTION_NAME\r\n}\r\n\r\nconst getSections = (children) => {\r\n  if (children instanceof Array) return children.filter(isValidSection)\r\n  return isValidSection(children) ? [children] : []\r\n}\r\n\r\nconst sleep = timeout => new Promise(resolve => setTimeout(resolve, timeout))\r\n\r\nexport const eventTypes = {\r\n  PREV: 'prev',\r\n  NEXT: 'next'\r\n}\r\n\r\nWizard.defaultProps = {\r\n  duration: 200,\r\n  allowProgress: false,\r\n  canOverlayClick: false,\r\n  onClose: () => { },\r\n}\r\n\r\nexport default function Wizard(props) {\r\n  const {\r\n    isOpen,\r\n    duration,\r\n    children,\r\n    canOverlayClick,\r\n    onClose,\r\n  } = props\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n  const [event, setEvent] = useState('')\r\n  const sections = getSections(children)\r\n  const transitions = useTransition(isOpen, null, {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: () => async (next) => {\r\n      await sleep(duration)\r\n      await next({ opacity: 0 })\r\n      await sleep(100)\r\n      setCurrentIndex(0)\r\n      setEvent('')\r\n    }\r\n  })\r\n\r\n  const onNext = () => {\r\n    setEvent(eventTypes.NEXT)\r\n    setCurrentIndex(prev => {\r\n      const next = prev + 1\r\n      const last = sections.length - 1\r\n      return next > last ? last : next\r\n    })\r\n  }\r\n\r\n  const onPrev = () => {\r\n    setEvent(eventTypes.PREV)\r\n    setCurrentIndex(prev => {\r\n      const next = prev - 1\r\n      return next < 0 ? 0 : next\r\n    })\r\n  }\r\n\r\n  const isCurrent = (index) => {\r\n    return index === currentIndex\r\n  }\r\n\r\n  return createPortal(\r\n    <Fragment>\r\n      {transitions.map(({ item, key, props }) =>\r\n        item && (\r\n          <animated.div\r\n            key={key}\r\n            style={props}\r\n            className=\"wizard\"\r\n          >\r\n            <div className=\"wizard-content\">\r\n              {sections.map(({\r\n                props: {\r\n                  children,\r\n                  className,\r\n                  ...rest\r\n                }\r\n              },\r\n                index\r\n              ) => (\r\n                  <SectionAnimated\r\n                    {...rest}\r\n                    key={index}\r\n                    isOpen={isOpen}\r\n                    current={isCurrent(index)}\r\n                    duration={duration}\r\n                    onClose={onClose}\r\n                    className={cns(\r\n                      `wizard-section-${index}`,\r\n                      className,\r\n                      { current: isCurrent(index) }\r\n                    )}\r\n                  >\r\n                    {children({\r\n                      onPrev,\r\n                      onNext,\r\n                      onClose,\r\n                      event,\r\n                      currentIndex,\r\n                      current: isCurrent(index)\r\n                    })}\r\n                  </SectionAnimated>\r\n                ))}\r\n            </div>\r\n            <div\r\n              className=\"overlay\"\r\n              onClick={canOverlayClick ? onClose : undefined}\r\n            />\r\n          </animated.div>\r\n        )\r\n      )}\r\n    </Fragment>,\r\n    document.getElementById('portal')\r\n  )\r\n}\r\n\r\nfunction SectionAnimated(props) {\r\n  const {\r\n    current,\r\n    children,\r\n    duration,\r\n    onClose,\r\n    isOpen,\r\n    ...rest\r\n  } = props\r\n  const { opacity, ...styles } = useSpring({\r\n    config: { duration: duration },\r\n    delay: !isOpen ? 0 : current ? duration : 0,\r\n    opacity: !isOpen && current ? 0 : current ? 1 : 0,\r\n    from: { opacity: !isOpen && current ? 1 : 0 }\r\n  })\r\n\r\n  return (\r\n    <animated.section\r\n      {...rest}\r\n      style={{\r\n        ...styles,\r\n        opacity,\r\n        display: opacity.interpolate((o) => {\r\n          if (o === 0) return 'none'\r\n        })\r\n      }}\r\n    >\r\n      {children}\r\n      <div\r\n        className=\"button-close\"\r\n        onClick={onClose}\r\n      />\r\n    </animated.section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  useSpring,\r\n  animated,\r\n} from 'react-spring'\r\nimport cns from 'classnames'\r\nimport './Template.scss'\r\n\r\nexport function Button(props) {\r\n  const {\r\n    type,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={cns(\r\n        'temp-button',\r\n        { 'temp-button-primary': type === 'primary' },\r\n        { 'temp-button-secondary': type === 'secondary' },\r\n        { 'temp-button-link': type === 'link' },\r\n        className,\r\n      )}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n  min: 0,\r\n  max: 0,\r\n  delay: 300,\r\n  duration: 600,\r\n  start: false,\r\n  reverse: false,\r\n}\r\n\r\nexport function ProgressBar(props) {\r\n  const {\r\n    min,\r\n    max,\r\n    delay,\r\n    duration,\r\n    start,\r\n    reverse,\r\n  } = props\r\n  const { width } = useSpring({\r\n    delay,\r\n    reverse,\r\n    reset: true,\r\n    config: { duration },\r\n    width: start ? max : min,\r\n    from: { width: min }\r\n  })\r\n\r\n  return (\r\n    <div className=\"temp-progress-bar\">\r\n      <animated.div\r\n        style={{ width: width.interpolate(w => `${w}%`) }}\r\n        className=\"temp-progress-value\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Template(props) {\r\n  const {\r\n    content,\r\n    className,\r\n    showBackButton,\r\n    onBack,\r\n    footer,\r\n  } = props\r\n\r\n  return (\r\n    <div className={cns(\r\n      'temp-wrapper',\r\n      className\r\n    )}>\r\n      {showBackButton && (\r\n        <div\r\n          className=\"temp-button-back\"\r\n          onClick={onBack}\r\n        >\r\n          Back\r\n        </div>\r\n      )}\r\n      <div className=\"temp-content\">\r\n        {content}\r\n      </div>\r\n      <div className=\"temp-footer\">\r\n        {footer}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {\r\n  useState,\r\n} from 'react'\r\nimport Wizard, {\r\n  Section,\r\n  eventTypes,\r\n} from './Wizard'\r\nimport Template, {\r\n  Button,\r\n  ProgressBar,\r\n} from './Template'\r\nimport './App.scss'\r\n\r\nfunction App() {\r\n  const [isOpen, setIsOpen] = useState(true)\r\n\r\n  const onOpen = () => {\r\n    setIsOpen(true)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setIsOpen(false)\r\n  }\r\n\r\n  const onFinish = () => {\r\n    alert('Thank you for information!')\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Wizard\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        canOverlayClick\r\n      >\r\n        <Section>\r\n          {({ onNext }) => (\r\n            <Template\r\n              content={\r\n                <article className=\"article\">\r\n                  <h3 className=\"heading\">Section 1</h3>\r\n                  <div>\r\n                    It is a long established fact that a reader will be\r\n                    readable content of a page when looking at its layout.\r\n                    using Lorem Ipsum is that it has a more-or-less normal\r\n                    of letters, as opposed to using 'Content here, content\r\n                    it look like readable English. Many desktop publishing\r\n                  </div>\r\n                </article>\r\n              }\r\n              footer={\r\n                <div className=\"button-group\">\r\n                  <Button type=\"primary\" onClick={onNext}>NEXT</Button>\r\n                  <Button type=\"secondary\">WELCOME TO SITE</Button>\r\n                </div>\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n        <Section>\r\n          {({ onPrev, onNext, current, event }) => (\r\n            <Template\r\n              showBackButton\r\n              onBack={onPrev}\r\n              content={\r\n                <article className=\"article\">\r\n                  <ProgressBar\r\n                    min={10}\r\n                    max={30}\r\n                    start={current}\r\n                    reverse={event === eventTypes.PREV}\r\n                  />\r\n                  <h3 className=\"heading\">Section 2</h3>\r\n                  <div className=\"categories\">\r\n                    <div className=\"category\" title=\"A\" />\r\n                    <div className=\"category\" title=\"B\" />\r\n                    <div className=\"category\" title=\"C\" />\r\n                    <div className=\"category\" title=\"D\" />\r\n                    <div className=\"category\" title=\"E\" />\r\n                    <div className=\"category\" title=\"D\" />\r\n                  </div>\r\n                </article>\r\n              }\r\n              footer={\r\n                <div className=\"button-group\">\r\n                  <Button type=\"primary\" onClick={onNext}>NEXT</Button>\r\n                  <Button type=\"secondary\" onClick={onPrev}>BACK</Button>\r\n                </div>\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n        <Section>\r\n          {({ onPrev, onNext, current, event }) => (\r\n            <Template\r\n              showBackButton\r\n              onBack={onPrev}\r\n              content={\r\n                <article className=\"article\">\r\n                  <ProgressBar\r\n                    min={30}\r\n                    max={55}\r\n                    start={current}\r\n                    reverse={event === eventTypes.PREV}\r\n                  />\r\n                  <h3 className=\"heading\">Section 3</h3>\r\n                  <div>\r\n                    a long established fact that a reader will be\r\n                    readable content of a page when looking at its layout.\r\n                    using Lorem Ipsum is that it has a more-or-less normal\r\n                    of letters, as opposed to using 'Content here, content\r\n                    it look like readable English\r\n                  </div>\r\n                </article>\r\n              }\r\n              footer={\r\n                <div className=\"button-group\">\r\n                  <Button disabled>CONTINUE</Button>\r\n                  <Button type=\"link\" onClick={onNext}>skip</Button>\r\n                </div>\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n        <Section>\r\n          {({ onPrev, onNext, current, event }) => (\r\n            <Template\r\n              showBackButton\r\n              onBack={onPrev}\r\n              content={\r\n                <article className=\"article\">\r\n                  <ProgressBar\r\n                    min={55}\r\n                    max={80}\r\n                    start={current}\r\n                    reverse={event === eventTypes.PREV}\r\n                  />\r\n                  <h3 className=\"heading\">Section 4</h3>\r\n                  <div className=\"categories\">\r\n                    <div className=\"category\" title=\"A\" />\r\n                    <div className=\"category\" title=\"B\" />\r\n                    <div className=\"category\" title=\"C\" />\r\n                    <div className=\"category\" title=\"D\" />\r\n                    <div className=\"category\" title=\"E\" />\r\n                    <div className=\"category\" title=\"D\" />\r\n                  </div>\r\n                </article>\r\n              }\r\n              footer={\r\n                <div className=\"button-group\">\r\n                  <Button disabled>CONTINUE</Button>\r\n                  <Button type=\"link\" onClick={onNext}>skip</Button>\r\n                </div>\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n        <Section>\r\n          {({ onPrev, current, event }) => (\r\n            <Template\r\n              showBackButton\r\n              onBack={onPrev}\r\n              content={\r\n                <article className=\"article\">\r\n                  <ProgressBar\r\n                    min={80}\r\n                    max={100}\r\n                    start={current}\r\n                    reverse={event === eventTypes.PREV}\r\n                  />\r\n                  <h3 className=\"heading\">Section 5</h3>\r\n                  <div>\r\n                    a long established fact that a reader will be\r\n                    readable content of a page when looking at its layout.\r\n                    using Lorem Ipsum is that it has a more-or-less normal\r\n                    of letters, as opposed to using 'Content here, content\r\n                    it look like readable English\r\n                  </div>\r\n                </article>\r\n              }\r\n              footer={\r\n                <div className=\"button-group\">\r\n                  <Button type=\"primary\" onClick={onFinish}>CONTINUE SHOPPING</Button>\r\n                </div>\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n      </Wizard>\r\n      <button type=\"button\" onClick={onOpen}>Trigger Modal</button>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.scss'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}